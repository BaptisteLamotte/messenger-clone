[{"/Users/invit/Desktop/baptiste/messenger-clone/src/index.js":"1","/Users/invit/Desktop/baptiste/messenger-clone/src/App.js":"2","/Users/invit/Desktop/baptiste/messenger-clone/src/reportWebVitals.js":"3","/Users/invit/Desktop/baptiste/messenger-clone/src/Message.js":"4","/Users/invit/Desktop/baptiste/messenger-clone/src/firebase.js":"5"},{"size":500,"mtime":1607004776435,"results":"6","hashOfConfig":"7"},{"size":1824,"mtime":1607017099403,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1607004776435,"results":"9","hashOfConfig":"7"},{"size":843,"mtime":1607017248603,"results":"10","hashOfConfig":"7"},{"size":587,"mtime":1607010378190,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"f1olhb",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/invit/Desktop/baptiste/messenger-clone/src/index.js",[],["25","26"],"/Users/invit/Desktop/baptiste/messenger-clone/src/App.js",["27","28","29"],"import React, { useState, useEffect} from 'react'\nimport './App.css';\nimport Message from './Message'\nimport {Button, FormControl, Input, InputLabel, IconButton} from '@material-ui/core'\nimport db from './firebase';\nimport firebase from 'firebase'\nimport FlipMove from 'react-flip-move'\nimport SendIcon from '@material-ui/icons/Send';\nfunction App() {\n\n  const [input, setInput] = useState('')\n  const [messages, setMessages] = useState([])\n  const [userName, setUserName] = useState('')\n\n  const sendMessage = () => {\n\n    db.collection('messages').add({\n      message : input,\n      userName : userName,\n      timestamp : firebase.firestore.FieldValue.serverTimestamp()\n    })\n    setInput('')\n  }\n  useEffect(()=>{\n    \n    db.collection('messages')\n    .orderBy('timestamp', 'desc')\n    .onSnapshot(snapshot => {\n      setMessages(snapshot.docs.map(doc=>({id : doc.id, message : doc.data()})))\n    });\n  },[])\n  useEffect(()=>{\n      setUserName(prompt('please enter your userName'))\n  },[])\n  return (\n    <div className=\"app\">\n      <img src='https://facebookbrand.com/wp-content/uploads/2020/10/Logo_Messenger_NewBlurple-399x399-1.png?w=100&h=100'/>\n      <h1>Welcome {userName}</h1>\n      \n      <form className='app_form'>\n        <FormControl className='app_formControl'>\n          <Input className='app_input' placeholder='Enter a message' value={input} onChange={(e)=>setInput(e.target.value)} />\n          <IconButton className='app_iconButton' disabled={!input} variant='contained' color='primary'  onClick={()=>sendMessage()}><SendIcon/></IconButton>\n        </FormControl>\n      </form>\n      <FlipMove>\n        {\n          messages.map(({message, id}) => (\n            <Message key={id} message={message} userName={userName}/>\n          ))\n        }\n      </FlipMove>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/invit/Desktop/baptiste/messenger-clone/src/reportWebVitals.js",[],"/Users/invit/Desktop/baptiste/messenger-clone/src/Message.js",[],["30","31"],"/Users/invit/Desktop/baptiste/messenger-clone/src/firebase.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":4,"column":9,"nodeType":"38","messageId":"39","endLine":4,"endColumn":15},{"ruleId":"36","severity":1,"message":"40","line":4,"column":37,"nodeType":"38","messageId":"39","endLine":4,"endColumn":47},{"ruleId":"41","severity":1,"message":"42","line":37,"column":7,"nodeType":"43","endLine":37,"endColumn":124},{"ruleId":"32","replacedBy":"44"},{"ruleId":"34","replacedBy":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'InputLabel' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["46"],["47"],"no-global-assign","no-unsafe-negation"]